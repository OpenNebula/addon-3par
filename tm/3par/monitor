#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2019, FeldHostâ„¢ (feldhost.net)                                   #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
# -------------------------------------------------------------------------- #

###############################################################################
# This script is used to monitor the free and used space of a datastore
###############################################################################

# ------------ Set up the environment to source common tools ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../../datastore/libfs.sh
source ${DRIVER_PATH}/../../etc/datastore/3par/3par.conf
source ${DRIVER_PATH}/../../datastore/3par/scripts_3par.sh

# -------- Get datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/API_ENDPOINT \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/IP \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SEC_API_ENDPOINT \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SEC_IP \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/REMOTE_COPY \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/CPG \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/NAMING_TYPE \
                    /DS_DRIVER_ACTION_DATA/MONITOR_VM_DISKS)

API_ENDPOINT="${XPATH_ELEMENTS[j++]:-$API_ENDPOINT}"
IP="${XPATH_ELEMENTS[j++]:-$IP}"
SEC_API_ENDPOINT="${XPATH_ELEMENTS[j++]:-$SEC_API_ENDPOINT}"
SEC_IP="${XPATH_ELEMENTS[j++]:-$SEC_IP}"
REMOTE_COPY="${XPATH_ELEMENTS[j++]:-$REMOTE_COPY}"
CPG="${XPATH_ELEMENTS[j++]:-$CPG}"
NAMING_TYPE="${XPATH_ELEMENTS[j++]:-$NAMING_TYPE}"
MONITOR_VM_DISKS="${XPATH_ELEMENTS[j++]}"

if [ -d "${0%/*}/../../im/kvm-probes.d/vm/monitor" ]; then
    LEGACY_MONITORING=0
else
    LEGACY_MONITORING=1
fi

# ------------ Compute datastore usage -------------

python ${DRIVER_PATH}/../../datastore/3par/3par.py monitorCPG -a $API_ENDPOINT -i $IP -s $SECURE -u $USERNAME \
                                                  -p $PASSWORD -c $CPG -nt $NAMING_TYPE -di $ID -d $MONITOR_VM_DISKS -lf $LEGACY_MONITORING

if [ $? -ne 0 ]; then
  error_message "Error monitoring CPG"
  exit 1
fi
