#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2022, FeldHostâ„¢ (feldhost.net)                                   #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
# -------------------------------------------------------------------------- #

###############################################################################
# This script is used to monitor the free and used space of a datastore
###############################################################################

# ------------ Set up the environment to source common tools ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../../datastore/libfs.sh
source ${DRIVER_PATH}/../../etc/datastore/3par/3par.conf
source ${DRIVER_PATH}/../../datastore/3par/scripts_3par.sh

# -------- Get datastore arguments from OpenNebula core ------------

if [ -n "$2" ]; then
    DRV_ACTION="$1"
    ID="$2"
else
    DRV_ACTION="$(cat)"
    ID="$1"
fi

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/API_ENDPOINT \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/IP \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SEC_API_ENDPOINT \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SEC_IP \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/REMOTE_COPY \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/CPG \
                    /DS_DRIVER_ACTION_DATA/MONITOR_VM_DISKS)

API_ENDPOINT="${XPATH_ELEMENTS[j++]:-$API_ENDPOINT}"
IP="${XPATH_ELEMENTS[j++]:-$IP}"
SEC_API_ENDPOINT="${XPATH_ELEMENTS[j++]:-$SEC_API_ENDPOINT}"
SEC_IP="${XPATH_ELEMENTS[j++]:-$SEC_IP}"
REMOTE_COPY="${XPATH_ELEMENTS[j++]:-$REMOTE_COPY}"
CPG="${XPATH_ELEMENTS[j++]:-$CPG}"
MONITOR_VM_DISKS="${XPATH_ELEMENTS[j++]}"

if [ -d "${0%/*}/../../im/kvm-probes.d/vm/monitor" ]; then
  LEGACY_MONITORING=0
else
    LEGACY_MONITORING=1
fi

# ------------ Compute datastore usage -------------

MONITOR_DATA=$(python ${DRIVER_PATH}/../../datastore/3par/3par.py monitorCPG -a $API_ENDPOINT -i $IP -s $SECURE \
                                                                                -u $USERNAME -p $PASSWORD -c $CPG)
MONITOR_STATUS=$?

if [ $MONITOR_VM_DISKS -eq 1 ]; then
  MONITOR_DATA_VMS=$(python ${DRIVER_PATH}/../../datastore/3par/3par.py monitorVmDisks -a $API_ENDPOINT -i $IP \
                                  -s $SECURE -u $USERNAME -p $PASSWORD -nt $NAMING_TYPE -di $ID -lf $LEGACY_MONITORING)
  MONITOR_VMS_STATUS=$?
fi

echo $MONITOR_DATA

if [ $MONITOR_VM_DISKS -eq 1 ]; then
  if [ $LEGACY_MONITORING -eq 0 ]; then
      send_to_monitor MONITOR_VM $MONITOR_VMS_STATUS -1 "$MONITOR_DATA_VMS"
  else
      echo $MONITOR_DATA_VMS
      exit $MONITOR_VMS_STATUS
  fi
fi

exit $MONITOR_STATUS
