#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2019, FeldHostâ„¢ (feldhost.net)                                   #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
# -------------------------------------------------------------------------- #

###############################################################################
# This script is used to clone an image
###############################################################################

# -------- Set up the environment to source common tools & conf ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../../etc/datastore/3par/3par.conf

# -------- Get cp and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/ID \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/API_ENDPOINT \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/IP \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/CPG \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/THIN \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/DEDUP \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/COMPRESSION \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/NAMING_TYPE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/NAME \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SIZE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/CLONING_ID)

unset i

DSID="${XPATH_ELEMENTS[i++]}"
API_ENDPOINT="${XPATH_ELEMENTS[i++]:-$API_ENDPOINT}"
IP="${XPATH_ELEMENTS[i++]:-$IP}"
CPG="${XPATH_ELEMENTS[i++]:-$CPG}"
THIN="${XPATH_ELEMENTS[i++]:-$THIN}"
DEDUP="${XPATH_ELEMENTS[i++]:-$DEDUP}"
COMPRESSION="${XPATH_ELEMENTS[i++]:-$COMPRESSION}"
NAMING_TYPE="${XPATH_ELEMENTS[i++]:-$NAMING_TYPE}"
NAME="${XPATH_ELEMENTS[i++]}"
SIZE="${XPATH_ELEMENTS[i++]}"
CLONING_ID="${XPATH_ELEMENTS[i++]}"

# Get source image properties
unset i XPATH_ELEMENTS
XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"
while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(oneimage show -x $CLONING_ID| $XPATH \
                    /IMAGE/DATASTORE_ID)

SRC_DSID=${XPATH_ELEMENTS[0]}

# Get source datastore properties
unset i XPATH_ELEMENTS
XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"
while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x $SRC_DSID | $XPATH /DATASTORE/TEMPLATE/NAMING_TYPE)

SRC_NAMING_TYPE="${XPATH_ELEMENTS[0]:-$NAMING_TYPE}"

# -------- Clone image ------------

python ${DRIVER_PATH}/3par.py cloneVV -a $API_ENDPOINT -i $IP -s $SECURE -u $USERNAME -p $PASSWORD \
                                -snt $SRC_NAMING_TYPE -sid $CLONING_ID -nt $NAMING_TYPE -id $ID \
                                -tpvv $THIN -tdvv $DEDUP -compr $COMPRESSION -c $CPG -sz $SIZE -co "$NAME"